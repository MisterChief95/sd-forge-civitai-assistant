from __future__ import annotations
from pydantic import BaseModel
from typing import Any, Optional


# generated by datamodel-codegen


class Image(BaseModel):
    url: str
    nsfwLevel: int = 1
    hasMeta: bool = False
    meta: Optional[dict[str, Any]] = None

    def __hash__(self):
        return hash(
            (
                self.url,
                self.nsfwLevel,
                self.hasMeta,
            )
        )


class CivitaiModel(BaseModel):
    modelId: int
    trainedWords: list[str] = []
    baseModel: str = ""
    images: list[Image] = []

    def __hash__(self):
        return hash((self.id, self.modelId, self.name, tuple(self.trainedWords), self.baseModel, self.description))
